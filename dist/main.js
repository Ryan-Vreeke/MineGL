(()=>{"use strict";const e="struct Fragment {\n  @builtin(position) Position: vec4<f32>,\n  @location(0) Color: vec4<f32>\n};\n\n@vertex\nfn vs_main(@location(0) vertexPostion: vec2<f32>, @location(1) vertexColor: vec3<f32>) -> Fragment {\n\n  var output: Fragment;\n  output.Position = vec4<f32>(vertexPostion, 1.0);\n  output.Color = vec4<f32>(vertexColor, 1.0);\n\n  return output;\n}\n\n@fragment\nfn fs_main(@location(0) Color: vec4<f32>) -> @location(0) vec4<f32> {\n  return Color;\n}\n";class t{constructor(e){const t=new Float32Array([0,.5,1,0,0,-.5,-.5,0,1,0,.5,-.5,0,0,1]),o=GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST,r={size:t.byteLength,usage:o,mappedAtCreation:!0};this.buffer=e.createBuffer(r),new Float32Array(this.buffer.getMappedRange()).set(t),this.buffer.unmap(),this.bufferLayout={arrayStride:20,attributes:[{shaderLocation:0,format:"float32x2",offset:0},{shaderLocation:1,format:"float32x3",offset:8}]}}}class o{constructor(e){const t=new Float32Array([0,-.5,-.5,0,1,0,0,.5,-.5,0,0,1,0,-.5,.5,1,1,0,0,-.5,.5,1,1,0,0,.5,-.5,0,0,1,0,.5,.5,1,0,0]),o=GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST,r={size:t.byteLength,usage:o,mappedAtCreation:!0};this.buffer=e.createBuffer(r),new Float32Array(this.buffer.getMappedRange()).set(t),this.buffer.unmap(),this.bufferLayout={arrayStride:24,attributes:[{shaderLocation:0,format:"float32x3",offset:0},{shaderLocation:1,format:"float32x3",offset:12}]}}}var r,n;n=function*(){const r=document.querySelector("canvas"),n=yield navigator.gpu.requestAdapter(),a=yield n.requestDevice(),i=(new t(a),new o(a)),f=r.getContext("webgpu"),u=window.devicePixelRatio;r.width=r.clientWidth*u,r.height=r.clientHeight*u;const s=navigator.gpu.getPreferredCanvasFormat();f.configure({device:a,format:s,alphaMode:"opaque"});const c=a.createRenderPipeline({layout:"auto",vertex:{module:a.createShaderModule({code:e}),entryPoint:"vs_main",buffers:[i.bufferLayout]},fragment:{module:a.createShaderModule({code:e}),entryPoint:"fs_main",targets:[{format:s}]},primitive:{topology:"triangle-list"}});requestAnimationFrame((function e(){const t=a.createCommandEncoder(),o={colorAttachments:[{view:f.getCurrentTexture().createView(),clearValue:[0,0,0,1],loadOp:"clear",storeOp:"store"}]},r=t.beginRenderPass(o);r.setPipeline(c),r.setVertexBuffer(0,i.buffer),r.draw(6),r.end(),a.queue.submit([t.finish()]),requestAnimationFrame(e)}))},new((r=void 0)||(r=Promise))((function(e,t){function o(e){try{i(n.next(e))}catch(e){t(e)}}function a(e){try{i(n.throw(e))}catch(e){t(e)}}function i(t){var n;t.done?e(t.value):(n=t.value,n instanceof r?n:new r((function(e){e(n)}))).then(o,a)}i((n=n.apply(void 0,[])).next())}))})();